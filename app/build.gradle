/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id 'checkstyle'
    id 'jacoco'
    id 'com.adarshr.test-logger' version '3.2.0'
}

apply plugin: 'java'
apply plugin: 'checkstyle'

group 'hexlet.code'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation(
            'org.junit.jupiter:junit-jupiter:5.9.0',
            'org.assertj:assertj-core:3.23.1'
    )

    implementation 'com.google.guava:guava:31.1-jre'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4.2'

    implementation 'info.picocli:picocli:4.7.0'
    annotationProcessor 'info.picocli:picocli-codegen:4.7.0'
}

application {
    mainClass = 'hexlet.code.App'
}

compileJava {
    options.release = 17

    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

tasks.named('test') {
    useJUnitPlatform()
}

checkstyle {
    toolVersion '9.2.1'
}

checkstyleMain {
    source ='src/main/java'
}

checkstyleTest {
    source ='src/test/java'
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

testlogger {
    showStandardStreams true
}